/* Create the months temporary table using WITH and SELECT everything from it so that you can see the structure.
We need a table for January, February, and March of 2017. */
WITH months AS (
SELECT
  '2017-01-01' AS first_day,
  '2017-01-31' AS last_day
UNION
SELECT
  '2017-02-01' AS first_day,
  '2017-02-28' AS last_day
UNION
SELECT
  '2017-03-01' AS first_day,
  '2017-03-31' AS last_day
)
SELECT *
FROM months;


/* Create a cross_join temporary table that is a CROSS JOIN of subscriptions and months. */
WITH months AS
(SELECT
  '2017-01-01' as first_day,
  '2017-01-31' as last_day
UNION
SELECT
  '2017-02-01' as first_day,
  '2017-02-28' as last_day
UNION
SELECT
  '2017-03-01' as first_day,
  '2017-03-31' as last_day
),
cross_join_table as (select subscriptions.*, months.first_day, months.last_day from subscriptions cross join months)
SELECT *
FROM cross_join_table
LIMIT 100;


/* Add a status temporary table. This table should have the following columns:
id - selected from the cross_join table
month - this is an alias of first_day from the cross_join table. We’re using the first day of the month to represent which month this data is for.
is_active - 0 or 1, derive this column using a CASE WHEN statement.
The is_active column should be 1 if the subscription_start is before the month’s first_day and if the subscription_end is either after the month’s first_day or is NULL. */
WITH months AS
(SELECT
  '2017-01-01' as first_day,
  '2017-01-31' as last_day
UNION
SELECT
  '2017-02-01' as first_day,
  '2017-02-28' as last_day
UNION
SELECT
  '2017-03-01' as first_day,
  '2017-03-31' as last_day
),
cross_join AS
(SELECT *
FROM subscriptions
CROSS JOIN months),
status AS
(SELECT id, first_day,
CASE
WHEN (subscription_start < first_day) AND
( subscription_end > first_day
OR subscription_end IS NULL
) THEN 1
ELSE 0
END AS ‘is_active’
FROM cross_join)
SELECT *
FROM status
LIMIT 100;


/* Add an is_canceled column to the status temporary table. Ensure that it is equal to 1 in months containing the subscription_end and 0 otherwise.
Derive this column using a CASE WHEN statement. You can use the BETWEEN function to check if a date falls between two others. */
WITH months AS
(SELECT
  '2017-01-01' as first_day,
  '2017-01-31' as last_day
UNION
SELECT
  '2017-02-01' as first_day,
  '2017-02-28' as last_day
UNION
SELECT
  '2017-03-01' as first_day,
  '2017-03-31' as last_day
),
cross_join AS
(SELECT *
FROM subscriptions
CROSS JOIN months),
status AS
(SELECT id, first_day as month,
CASE
  WHEN (subscription_start < first_day)
    AND (
      subscription_end > first_day
      OR subscription_end IS NULL
    ) THEN 1
  ELSE 0
END as is_active,
Case
  when (subscription_end between first_day and last_day) then 1
  Else 0
End as is_canceled
FROM cross_join)
SELECT *
FROM status
LIMIT 100;


/* Add a status_aggregate temporary table. This table should have the following columns:
month - selected from the status table
active - the SUM() of active users for this month
canceled - the SUM() of canceled users for this month */
WITH months AS
(SELECT
  '2017-01-01' as first_day,
  '2017-01-31' as last_day
UNION
SELECT
  '2017-02-01' as first_day,
  '2017-02-28' as last_day
UNION
SELECT
  '2017-03-01' as first_day,
  '2017-03-31' as last_day
),
cross_join AS
(SELECT *
FROM subscriptions
CROSS JOIN months),
status AS
(SELECT id, first_day as month,
CASE
  WHEN (subscription_start < first_day)
    AND (
      subscription_end > first_day
      OR subscription_end IS NULL
    ) THEN 1
  ELSE 0
END as is_active,
CASE 
  WHEN subscription_end BETWEEN first_day AND last_day THEN 1
  ELSE 0
END as is_canceled
FROM cross_join),
status_aggregate AS
(SELECT month, SUM(is_active), SUM (is_canceled)
FROM status
GROUP BY month)
SELECT *
FROM status_aggregate;



/* Add a SELECT statement to calculate the churn rate. The result should contain two columns:
month - selected from status_aggregate
churn_rate - calculated from status_aggregate.canceled and status_aggregate.active.*/
WITH months AS
(SELECT
  '2017-01-01' as first_day,
  '2017-01-31' as last_day
UNION
SELECT
  '2017-02-01' as first_day,
  '2017-02-28' as last_day
UNION
SELECT
  '2017-03-01' as first_day,
  '2017-03-31' as last_day
),
cross_join AS
(SELECT *
FROM subscriptions
CROSS JOIN months),
status AS
(SELECT id, first_day as month,
CASE
  WHEN (subscription_start < first_day)
    AND (
      subscription_end > first_day
      OR subscription_end IS NULL
    ) THEN 1
  ELSE 0
END as is_active,
CASE 
  WHEN subscription_end BETWEEN first_day AND last_day THEN 1
  ELSE 0
END as is_canceled
FROM cross_join),
status_aggregate AS
(SELECT
  month,
  SUM(is_active) as active,
  SUM(is_canceled) as canceled
FROM status
GROUP BY month)
SELECT month, 1.0 * status_aggregate.canceled / status_aggregate.active AS churn_rate FROM status_aggregate;


